#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '

usage() {
    cat <<EOF
Usage: . ${BASH_SOURCE[0]##*/} [-n | --dry-run]

Create Consul agent configuration file.

  -n, --dry-run   Do not create configuration file, only export variables
                  and function definitions.
EOF
}

case "$*" in
    '') dry_run=false;;
    '-n'|'--dry-run') dry_run=true;;
    *) usage >&2; exit 1;;
esac

get_service_ids() {
    local filter=$1
    local cmd="consul kv get -recurse m0conf/nodes/$(node-name)/processes/ |
                  $filter | sed 's/.*processes.//' | cut -d/ -f1"
    eval $cmd || true
}

get_service_ep() {
    local process_fidk=$1
    consul kv get m0conf/nodes/$(node-name)/processes/$process_fidk/endpoint
}

get_service_addr() {
    echo ${1%:*}
}

get_service_ip_addr() {
    echo ${1%@*}
}

get_service_port() {
    echo ${1##*:}
}

id2fid() {
    printf '0x7200000000000001:%#x\n' $1
}

get_ios_be_seg() {
    local id=$1
    consul kv get m0conf/nodes/$(node-name)/processes/$id/be_seg
}

HAX_ID=$(get_service_ids 'grep -iw ha')
[[ $HAX_ID ]] || {
    cat >&2 <<.
Cannot get information about Hax from Consul for this host ($(node-name)).
Please verify that the host name matches the one stored in the Consul KV.
.
    usage >&2
    exit 1
}
CONFD_IDs=$(get_service_ids 'grep -iw confd')
IOS_IDs=$(get_service_ids 'grep -iw ios | grep -iwv be_seg | grep -iwv confd')
S3_IDs=$(get_service_ids 'grep -iw m0_client_s3')
HAX_EP=$(get_service_ep $HAX_ID)


if $dry_run; then
    return 0  # we must not `exit`, because the script is sourced
fi
# --------------------------------------------------------------------

if [[ $CONFD_IDs ]]; then
    CONF_FILE=/var/lib/hare/consul-server-conf/consul-server-conf.json
else
    CONF_FILE=/var/lib/hare/consul-client-conf/consul-client-conf.json
fi

SVCS_CONF=''

append_hax_svc() {
    local id=$1
    local ep=$(get_service_ep $id)
    local addr=$(get_service_addr $ep)
    local port=$(get_service_port $ep)
    SVCS_CONF+="${SVCS_CONF:+,}{
      \"id\": \"$id\",
      \"name\": \"hax\",
      \"address\": \"$addr\",
      \"port\": $port,
      \"checks\": [
          {
            \"args\": [ \"/opt/seagate/cortx/hare/libexec/check-service\", \"--hax\" ],
            \"interval\": \"1s\",
            \"status\": \"warning\"
          }
        ]
    }"
}

append_confd_svc() {
    local id=$1
    local fid=$(id2fid $id)
    local ep=$(get_service_ep $id)
    local addr=$(get_service_addr $ep)
    local port=$(get_service_port $ep)
    SVCS_CONF+="${SVCS_CONF:+,}{
      \"id\": \"$id\",
      \"name\": \"confd\",
      \"address\": \"$addr\",
      \"port\": $port,
      \"checks\": [
          {
            \"args\": [ \"/opt/seagate/cortx/hare/libexec/check-service\",
                        \"--fid\", \"$fid\" ],
            \"interval\": \"1s\",
            \"status\": \"warning\"
          }
        ]
    }"
    cat <<EOF | sudo tee /etc/sysconfig/m0d-$fid > /dev/null
MERO_M0D_EP='$ep'
MERO_HA_EP='$HAX_EP'
MERO_PROCESS_FID='$fid'
MERO_CONF_XC='/etc/motr/confd.xc'
EOF
}

append_ios_svc() {
    local id=$1
    local fid=$(id2fid $id)
    local ep=$(get_service_ep $id)
    local addr=$(get_service_addr $ep)
    local port=$(get_service_port $ep)
    local be_seg=$(get_ios_be_seg $id)
    SVCS_CONF+="${SVCS_CONF:+,}{
      \"id\": \"$id\",
      \"name\": \"ios\",
      \"address\": \"$addr\",
      \"port\": $port,
      \"checks\": [
          {
            \"args\": [ \"/opt/seagate/cortx/hare/libexec/check-service\",
                        \"--fid\", \"$fid\" ],
            \"interval\": \"1s\",
            \"status\": \"warning\"
          }
        ]
    }"
    cat <<EOF | sudo tee /etc/sysconfig/m0d-$fid > /dev/null
MERO_M0D_EP='$ep'
MERO_HA_EP='$HAX_EP'
MERO_PROCESS_FID='$fid'
MERO_BE_SEG_PATH='$be_seg'
EOF
}

append_s3_svc() {
    local id=$1
    local fid=$(id2fid $id)
    local ep=$(get_service_ep $id)
    local addr=$(get_service_addr $ep)
    local port=$(get_service_port $ep)
    local s3port=$2
    local s3svc='s3server'@$fid
    SVCS_CONF+="${SVCS_CONF:+,}{
      \"id\": \"$id\",
      \"name\": \"s3service\",
      \"address\": \"$addr\",
      \"port\": $port,
      \"checks\": [
          {
            \"args\": [ \"/opt/seagate/cortx/hare/libexec/check-service\",
                        \"--svc\", \"$s3svc\" ],
            \"interval\": \"1s\",
            \"status\": \"warning\"
          }
        ]
    }"
    cat <<EOF | sudo tee /etc/sysconfig/s3server-$fid > /dev/null
MERO_PROFILE_FID=`consul kv get m0conf/profiles`
MERO_S3SERVER_EP='$ep'
MERO_HA_EP='$HAX_EP'
MERO_PROCESS_FID='$fid'
MERO_S3SERVER_PORT=$s3port
EOF
}

for id in $HAX_ID; do
    append_hax_svc $id
done

for id in $CONFD_IDs; do
    append_confd_svc $id
done

for id in $IOS_IDs; do
    append_ios_svc $id
done

s3port=28081
for id in $S3_IDs; do
    append_s3_svc $id $s3port
    ((s3port++))
done

tmpfile=$(mktemp /tmp/${CONF_FILE##*/}.XXXXXX)
trap "rm -f $tmpfile" EXIT # delete automatically on exit
jq ".services = [$SVCS_CONF]" <$CONF_FILE >$tmpfile
sudo cp $tmpfile $CONF_FILE

sudo sed -r "s;(http://)localhost;\1$(get_service_ip_addr $HAX_EP);" \
         -i $CONF_FILE

consul reload > /dev/null
