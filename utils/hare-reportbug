#!/usr/bin/env bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.

set -eu -o pipefail
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '
# set -x

# :help: gather Hare forensic data

PROG=${0##*/}
DEFAULT_DEST_DIR=/tmp

usage() {
    cat <<EOF
Usage: $PROG [-h | --help] [<bundle-id> <dest-dir>]

Create '<dest-dir>/hare/hare_<bundle-id>.tar.gz' archive with Hare
forensic data --- logs and configuration files, which can be used for
reporting and researching Hare bugs.

Positional arguments:
  bundle-id   Support bundle ID; defaults to the local host name
              (${HOSTNAME%%.*}).
  dest-dir    Target directory; defaults to '$DEFAULT_DEST_DIR'.

Options:
  -h, --help   Show this help and exit.
EOF
}

die() {
    echo "$PROG: $*" >&2
    exit 1
}

systemd_journal() {
    local nr_boots_max=10
    local nr_boots=$(sudo journalctl --list-boot | wc -l)
    if ((nr_boots > nr_boots_max)); then
        nr_boots=$nr_boots_max
    fi
    for ((i = 0; i < nr_boots; ++i)); do
        sudo journalctl -b -$i --utc --no-pager > systemd-journal_$i || true
    done
}

case "${1:-}" in
    -h|--help) usage; exit;;
esac

if (($? != 0 && $? != 2)); then
    die "Wrong number of arguments. Type '$PROG --help' for usage."
fi

bundle_id=${1:-${HOSTNAME%%.*}}
dest_dir=${2:-$DEFAULT_DEST_DIR}

if [[ -z $bundle_id || -z $dest_dir ]]; then
    die "Invalid argument. Type '$PROG --help' for usage."
fi

if [[ -a $dest_dir && ! -d $dest_dir ]]; then
    die "$dest_dir is not a directory"
fi

# XXX The intermediate `hare` directory is required by the
# CSM Support Bundle spec-ification.
mkdir -p "$dest_dir/hare/$HOSTNAME"
cd "$dest_dir/hare/$HOSTNAME"

exec 5>&2
exec 2> >(tee _reportbug.stderr >&2)

systemd_journal

sudo journalctl --no-pager --full --utc --output=json --unit=pacemaker.service \
     > syslog-pacemaker.json || true

sudo systemctl --all --full --no-pager status {hare,m0,motr,s3}\* \
     > systemctl-status.txt || true

# cluster status
sudo timeout --kill-after 30 15 hctl status \
     > hctl-status.txt || true

extra_files=(
    /etc/sysconfig/motr
    /opt/seagate/cortx-prvsnr/pillar/components/cluster.sls
    /opt/seagate/cortx/s3/conf/s3config.yaml
)
for f in ${extra_files[@]}; do
    if [[ -f $f ]]; then
        cp --parents $f . || true
    fi
done

cp --parents /var/lib/hare/* . 2>/dev/null || true
cp -r --parents /var/lib/hare/consul-{env,server,client}-* . 2>/dev/null || true
cp -r --parents /var/log/hare/ . 2>/dev/null || true
cp -r --parents /var/log/cluster/ . 2>/dev/null || true

cd ..

# Close copied stderr to avoid usage of $HOSTNAME directory
exec 2>&5

[[ -s $HOSTNAME/_reportbug.stderr ]] || rm $HOSTNAME/_reportbug.stderr

tar --remove-files -czf "hare_${bundle_id}.tar.gz" $HOSTNAME
echo "Created $dest_dir/hare/hare_${bundle_id}.tar.gz"
