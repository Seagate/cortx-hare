#!/usr/bin/env bash
set -eu -o pipefail
# set -x
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '

PATH=$PATH:/opt/seagate/cortx/hare/bin

## Return profile fid.
##
## Sample output:
## ```
## 0x7000000000000001:0x2e
## ```
profile_fid() {
    consul kv get m0conf/profiles
}

## Return process fid and endpoint of every Clovis client.
##
## Sample output:
## ```
## 0x7200000000000001:0x28 172.28.128.150@tcp:12345:4:1
## 0x7200000000000001:0x2b 172.28.128.150@tcp:12345:4:2
## ```
clovis_clients() {
    consul kv get -recurse m0conf/nodes |
        # Sample input:
        # ```
        # m0conf/nodes/cmu/processes/12/endpoint:172.28.128.150@tcp:12345:2:2
        # m0conf/nodes/cmu/processes/12/services/addb2:37
        # [...]
        # ```
        awk -F/ '/endpoint:/ {ep=$6; sub(/^endpoint:/, "", ep)}
                 /m0_client_other/ {printf("0x7200000000000001:0x%x %s\n", $5, ep)}'
}

## Parameterized version of `clovis/m0crate/tests/test1_io.yaml` from
## Motr sources.
m0crate_io_conf() {
    local local_ep=$1
    local hax_ep=$2
    local process_fid=$3

    cat <<EOF
CrateConfig_Sections: [MOTR_CONFIG, WORKLOAD_SPEC]

MOTR_CONFIG:
   MOTR_LOCAL_ADDR: $local_ep
   MOTR_HA_ADDR:    $hax_ep
   CLOVIS_PROF: <$(profile_fid)>  # Profile fid
   LAYOUT_ID: 9                      # Defines the UNIT_SIZE (9: 1MB)
   IS_OOSTORE: 1                     # Is oostore-mode?
   IS_READ_VERIFY: 0                 # Enable read-verify?
   CLOVIS_TM_RECV_QUEUE_MIN_LEN: 16  # Minimum length of the receive queue
   CLOVIS_MAX_RPC_MSG_SIZE: 65536    # Maximum rpc message size
   CLOVIS_PROCESS_FID: <$process_fid>
   CLOVIS_IDX_SERVICE_ID: 1

LOG_LEVEL: 4  # err(0), warn(1), info(2), trace(3), debug(4)

WORKLOAD_SPEC:                # Workload specification section
   WORKLOAD:                  # First Workload
      WORKLOAD_TYPE: 1        # Index(0), IO(1)
      WORKLOAD_SEED: tstamp   # SEED to the random number generator
      OPCODE: 3               # Operation(s) to test: 2-WRITE, 3-WRITE+READ
      CLOVIS_IOSIZE: 10m      # Total Size of IO to perform per object
      BLOCK_SIZE: 2m          # In N+K conf set to (N * UNIT_SIZE) for max perf
      BLOCKS_PER_OP: 1        # Number of blocks per Clovis operation
      MAX_NR_OPS: 1           # Max concurrent operations per thread
      NR_OBJS: 10             # Number of objects to create by each thread
      NR_THREADS: 4           # Number of threads to run in this workload
      RAND_IO: 1              # Random (1) or sequential (0) IO?
      MODE: 1                 # Synchronous=0, Asynchronous=1
      THREAD_OPS: 0           # All threads write to the same object?
      NR_ROUNDS: 1            # Number of times this workload is run
      EXEC_TIME: unlimited    # Execution time (secs or "unlimited")
      SOURCE_FILE: /tmp/128M  # Source data file
EOF
}

clovis_clients | while read fid ep; do
    ip=${ep%@*}
    if ip a | grep -q $ip; then  # our IP
        m0crate_io_conf $ep ${ep%:*:*}:1:1 $fid
        break
    fi
done
