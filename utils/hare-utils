#!/usr/bin/env bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.

CONSUL_ADDR=127.0.0.1
CONSUL_PORT=8500

wait4() {
    for pid in $*; do
        wait $pid
    done
}

get_server_nodes() {
    curl -s http://$CONSUL_ADDR:$CONSUL_PORT/v1/catalog/nodes?service=confd |
        jq -r .[].Node
}

get_leader() {
    curl -sX GET http://$CONSUL_ADDR:$CONSUL_PORT/v1/kv/leader |
        jq -r '.[].Value' | base64 -d
}

start_motr() {
    local op=$1
    local phase=$2

    say "Starting Motr ($phase, $op)..."
    [[ $op == 'mkfs' ]] && op='--mkfs-only' || op=
    bootstrap-node $op --phase $phase &
    pids=($!)
    wait4 ${pids[@]}
    echo ' OK'
}

start_s3server() {
    say 'Starting S3 servers (phase3)...'
    bootstrap-node --phase phase3 &
    pids=($!)
    wait4 ${pids[@]}
    echo ' OK'
}

check_service() {
    local svc=$1
    curl -s http://127.0.0.1:8500/v1/health/service/$svc |
        jq -r '.[] | "\(.Node.Node) \([.Checks[].Status]|unique)"' |
        fgrep -v '["passing"]' || true
}

check_services() {
    count=1

    # Services to be checked
    local svc_list=("confd" "ios" "s3service")
    
    for svc in "${svc_list[@]}"; do
        svc_not_ready=$(check_service $svc)
        while [[ $svc_not_ready ]]; do
            if (( $count > 30 )); then
                echo $svc_not_ready >&2
                echo "Check '$svc' service on the node(s) listed above." >&2
                exit 1
            fi
            (( count++ ))
            sleep 1
            svc_not_ready=$(check_service $svc)
        done
    done
    echo ' OK'
}
